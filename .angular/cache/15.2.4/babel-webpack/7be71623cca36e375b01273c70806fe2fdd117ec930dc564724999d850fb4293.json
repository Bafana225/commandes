{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class CommandeService {\n  constructor(http) {\n    this.http = http;\n    this.apiURL = 'http://localhost:8080/commandes/api';\n  }\n  listeCommande() {\n    return this.http.get(this.apiURL);\n  }\n  ajouterCommande(com) {\n    console.log(com);\n    return this.http.post(this.apiURL, com, httpOptions);\n  }\n  supprimerCommande(id) {\n    console.log(\"Commande supprimée\");\n    const url = `${this.apiURL}/${id}`;\n    return this.http.delete(url, httpOptions);\n  }\n  consulterCommande(id) {\n    const url = `${this.apiURL}/${id}`;\n    return this.http.get(url);\n  }\n  updateCommande(com) {\n    return this.http.put(this.apiURL, com, httpOptions);\n  }\n}\nCommandeService.ɵfac = function CommandeService_Factory(t) {\n  return new (t || CommandeService)(i0.ɵɵinject(i1.HttpClient));\n};\nCommandeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CommandeService,\n  factory: CommandeService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAI9D,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,IAAIF,WAAW,CAAE;IAAC,cAAc,EAAE;EAAkB,CAAC;CAC7D;AAMH,OAAM,MAAOG,eAAe;EAI1BC,YAAoBC,IAAiB;IAAjB,SAAI,GAAJA,IAAI;IAHtB,WAAM,GAAW,qCAAqC;EAGf;EAEzCC,aAAa;IACX,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAa,IAAI,CAACC,MAAM,CAAC;EAC/C;EAEAC,eAAe,CAACC,GAAa;IAC3BC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAChB,OAAO,IAAI,CAACL,IAAI,CAACQ,IAAI,CAAW,IAAI,CAACL,MAAM,EAAEE,GAAG,EAAET,WAAW,CAAC;EAChE;EAEAa,iBAAiB,CAACC,EAAU;IAC1BJ,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;IACjC,MAAMI,GAAG,GAAG,GAAG,IAAI,CAACR,MAAM,IAAIO,EAAE,EAAE;IAClC,OAAO,IAAI,CAACV,IAAI,CAACY,MAAM,CAACD,GAAG,EAAEf,WAAW,CAAC;EAC3C;EAGAiB,iBAAiB,CAACH,EAAU;IAC1B,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACR,MAAM,IAAIO,EAAE,EAAE;IAClC,OAAO,IAAI,CAACV,IAAI,CAACE,GAAG,CAAWS,GAAG,CAAC;EACrC;EAEAG,cAAc,CAACT,GAAa;IAC1B,OAAO,IAAI,CAACL,IAAI,CAACe,GAAG,CAAW,IAAI,CAACZ,MAAM,EAAEE,GAAG,EAAET,WAAW,CAAC;EAC/D;;AA7BWE,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAkB,SAAflB,eAAe;EAAAmB,YAHd;AAAM","names":["HttpHeaders","httpOptions","headers","CommandeService","constructor","http","listeCommande","get","apiURL","ajouterCommande","com","console","log","post","supprimerCommande","id","url","delete","consulterCommande","updateCommande","put","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Memel\\Desktop\\Angular\\commandes\\src\\app\\services\\commande.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Commande } from '../model/commande.model';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders( {'Content-Type': 'application/json'} )\r\n  };\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CommandeService {\r\n    apiURL: string = 'http://localhost:8080/commandes/api';\r\n    commandes! : Commande[]; \r\n  \r\n  constructor(private http : HttpClient) { }\r\n\r\n  listeCommande(): Observable<Commande[]> {\r\n    return this.http.get<Commande[]>(this.apiURL);\r\n  }\r\n\r\n  ajouterCommande(com: Commande): Observable<Commande> {\r\n    console.log(com);\r\n    return this.http.post<Commande>(this.apiURL, com, httpOptions);\r\n  }\r\n\r\n  supprimerCommande(id: number) {\r\n    console.log(\"Commande supprimée\");\r\n    const url = `${this.apiURL}/${id}`;\r\n    return this.http.delete(url, httpOptions);\r\n  }\r\n\r\n\r\n  consulterCommande(id: number): Observable<Commande> {\r\n    const url = `${this.apiURL}/${id}`;\r\n    return this.http.get<Commande>(url);\r\n  }\r\n\r\n  updateCommande(com: Commande): Observable<Commande> {\r\n    return this.http.put<Commande>(this.apiURL, com, httpOptions);\r\n  }\r\n\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}